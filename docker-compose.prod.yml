version: "3.8"

services:
  # For deployment with external database (Railway, etc.)
  api:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DATABASE_PUBLIC_URL=${DATABASE_PUBLIC_URL}
      - ConnectionStrings__DefaultConnection=${DATABASE_PUBLIC_URL}
      - Jwt__SecretKey=${JWT_SECRET_KEY}
      - Jwt__Issuer=PersonalFinanceAPI
      - Jwt__Audience=PersonalFinanceAPI-Users
      - Jwt__AccessTokenExpirationMinutes=60
      - Jwt__RefreshTokenExpirationDays=7
      - FeatureFlags__EnableSwagger=true
      - CORS__AllowedOrigins__0=*
    ports:
      - "8080:8080"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Use this profile for local development with bundled PostgreSQL
  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: personalfinance
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-postgres123}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database-schema.sql:/docker-entrypoint-initdb.d/schema.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - local
    ports:
      - "5432:5432"

volumes:
  postgres_data:
